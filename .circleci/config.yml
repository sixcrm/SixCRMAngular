defaults: &job-defaults
  docker:
    - image: circleci/node:8.10-stretch-browsers
      environment:
        - TZ: "/usr/share/zoneinfo/America/Los_Angeles"
        - CHROME_BIN: "/usr/bin/google-chrome"

version: 2
jobs:
  install:
    <<: *job-defaults
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run: git submodule update --init --remote --merge
      - run:
          name: npm install
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - save_cache:
          key: git-modules-{{ .Branch }}-{{ .Revision }}
          paths:
            - libs/deployment_scripts
  build:
    <<: *job-defaults
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - restore_cache:
          key: git-modules-{{ .Branch }}-{{ .Revision }}
      - run:
          name: Set version
          command: node libs/deployment_scripts/src/versioning.js
      - run:
          name: Build Angular app
          command: ./libs/deployment_scripts/src/build-angular.sh
          no_output_timeout: 20m
      - save_cache:
          key: dist-{{ .Branch }}-{{ .Revision }}
          paths:
            - dist
  aws_sts:
    <<: *job-defaults
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - restore_cache:
          key: git-modules-{{ .Branch }}-{{ .Revision }}
      - run:
          name: debugging
          command: printenv
      - restore_cache:
          key: deployment-credentials-{{ .Branch }}-{{ .Revision }}
      - run:
          name: Make Access Credentials directory
          command: mkdir -p deployment_credentials/
      - run:
          name: Create Credentials
          command: node ./libs/deployment_scripts/src/sts-assume-role.js $CIRCLE_BRANCH >> deployment_credentials/stscredentials
      - save_cache:
          key: deployment-credentials-{{ .Branch }}-{{ .Revision }}
          paths:
            - deployment_credentials
      - run:
          name: set credentials
          command: cat deployment_credentials/stscredentials >> $BASH_ENV
      - run:
          name: Debugging 2
          command: printenv
  deploy_s3:
    <<: *job-defaults
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - restore_cache:
          key: git-modules-{{ .Branch }}-{{ .Revision }}
      - restore_cache:
          key: dist-{{ .Branch }}-{{ .Revision }}
      - restore_cache:
          key: deployment-credentials-{{ .Branch }}-{{ .Revision }}
      - run:
          name: debugging
          command: printenv
      - run:
          name: Set Credentials
          command: cat deployment_credentials/stscredentials >> $BASH_ENV
      - run:
          name: Debugging 2
          command: printenv
      - run:
          name: Deploy App to s3
          command: node libs/deployment_scripts/src/deploy-s3.js deployment/deploy-config.json
  deploy_cloudfront:
    <<: *job-defaults
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - restore_cache:
          key: git-modules-{{ .Branch }}-{{ .Revision }}
      - restore_cache:
          key: deployment-credentials-{{ .Branch }}-{{ .Revision }}
      - restore_cache:
          key: dist-{{ .Branch }}-{{ .Revision }}
      - run:
          name: Set Credentials
          command: cat deployment_credentials/stscredentials >> $BASH_ENV
      - run:
          name: Add/Update CloudFront Distribution
          command: node libs/deployment_scripts/src/deploy-cloudfront.js deployment/deploy-config.json
  e2e_local_smoke:
      <<: *job-defaults
      steps:
        - checkout
        - restore_cache:
            key: dependency-cache-{{ checksum "package-lock.json" }}
        - run:
            name: Install Chrome
            command: |
              wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
              sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
              sudo apt-get update
              sudo apt-get -y install google-chrome-stable
        - run:
            name: Update webdriver
            command: npm run pree2e
        - run:
            name: Run local server
            command: npm run start
            background: true
        - run:
            name: Wait for server to start
            command: sleep 60
        - run:
            name: Run smoke e2e
            command: npm run e2e.local -- --suite login
            no_output_timeout: 20m
  e2e_register:
    <<: *job-defaults
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install Chrome
          command: |
            wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
            sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
            sudo apt-get update
            sudo apt-get -y install google-chrome-stable
      - run:
          name: Update webdriver
          command: npm run pree2e
      - run:
          name: Run e2e register
          command: |
            if [ "${CIRCLE_BRANCH}" == "development" ]; then
              npm run e2e.dev -- --suite register
            elif [ "${CIRCLE_BRANCH}" == "staging" ]; then
              npm run e2e.stage -- --suite register
            fi
          no_output_timeout: 20m
  e2e_accept_invite:
    <<: *job-defaults
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install Chrome
          command: |
            wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
            sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
            sudo apt-get update
            sudo apt-get -y install google-chrome-stable
      - run:
          name: Update webdriver
          command: npm run pree2e
      - run:
          name: Run e2e accept invite
          command: |
            if [ "${CIRCLE_BRANCH}" == "development" ]; then
              npm run e2e.dev -- --suite invite
            elif [ "${CIRCLE_BRANCH}" == "staging" ]; then
              npm run e2e.stage -- --suite invite
            fi
          no_output_timeout: 20m
  e2e_login:
    <<: *job-defaults
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install Chrome
          command: |
            wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
            sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
            sudo apt-get update
            sudo apt-get -y install google-chrome-stable
      - run:
          name: Update webdriver
          command: npm run pree2e
      - run:
          name: Run e2e login
          command: |
            if [ "${CIRCLE_BRANCH}" == "development" ]; then
              npm run e2e.dev -- --suite login
            elif [ "${CIRCLE_BRANCH}" == "staging" ]; then
              npm run e2e.stage -- --suite login
            fi
          no_output_timeout: 20m
  e2e_navigation:
    <<: *job-defaults
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install Chrome
          command: |
            wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
            sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
            sudo apt-get update
            sudo apt-get -y install google-chrome-stable
      - run:
          name: Update webdriver
          command: npm run pree2e
      - run:
          name: Run e2e navigation
          command: |
            if [ "${CIRCLE_BRANCH}" == "development" ]; then
              npm run e2e.dev -- --suite navigation
            elif [ "${CIRCLE_BRANCH}" == "staging" ]; then
              npm run e2e.stage -- --suite navigation
            fi
          no_output_timeout: 20m
  e2e_campaign:
    <<: *job-defaults
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install Chrome
          command: |
            wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
            sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
            sudo apt-get update
            sudo apt-get -y install google-chrome-stable
      - run:
          name: Update webdriver
          command: npm run pree2e
      - run:
          name: Run e2e campaign
          command: |
            if [ "${CIRCLE_BRANCH}" == "development" ]; then
              npm run e2e.dev -- --suite campaign
            elif [ "${CIRCLE_BRANCH}" == "staging" ]; then
              npm run e2e.stage -- --suite campaign
            fi
          no_output_timeout: 20m
  e2e_product:
    <<: *job-defaults
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install Chrome
          command: |
            wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
            sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
            sudo apt-get update
            sudo apt-get -y install google-chrome-stable
      - run:
          name: Update webdriver
          command: npm run pree2e
      - run:
          name: Run e2e product
          command: |
            if [ "${CIRCLE_BRANCH}" == "development" ]; then
              npm run e2e.dev -- --suite product
            elif [ "${CIRCLE_BRANCH}" == "staging" ]; then
              npm run e2e.stage -- --suite product
            fi
          no_output_timeout: 20m
  e2e_product_schedule:
    <<: *job-defaults
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install Chrome
          command: |
            wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
            sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
            sudo apt-get update
            sudo apt-get -y install google-chrome-stable
      - run:
          name: Update webdriver
          command: npm run pree2e
      - run:
          name: Run e2e product schedule
          command: |
            if [ "${CIRCLE_BRANCH}" == "development" ]; then
              npm run e2e.dev -- --suite product_schedule
            elif [ "${CIRCLE_BRANCH}" == "staging" ]; then
              npm run e2e.stage -- --suite product_schedule
            fi
          no_output_timeout: 20m
  e2e_merchant_provider:
    <<: *job-defaults
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install Chrome
          command: |
            wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
            sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
            sudo apt-get update
            sudo apt-get -y install google-chrome-stable
      - run:
          name: Update webdriver
          command: npm run pree2e
      - run:
          name: Run e2e merchant provider
          command: |
            if [ "${CIRCLE_BRANCH}" == "development" ]; then
              npm run e2e.dev -- --suite merchant_provider
            elif [ "${CIRCLE_BRANCH}" == "staging" ]; then
              npm run e2e.stage -- --suite merchant_provider
            fi
          no_output_timeout: 20m
  e2e_merchant_provider_group:
    <<: *job-defaults
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install Chrome
          command: |
            wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
            sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
            sudo apt-get update
            sudo apt-get -y install google-chrome-stable
      - run:
          name: Update webdriver
          command: npm run pree2e
      - run:
          name: Run e2e merchant provider group
          command: |
            if [ "${CIRCLE_BRANCH}" == "development" ]; then
              npm run e2e.dev -- --suite merchant_provider_group
            elif [ "${CIRCLE_BRANCH}" == "staging" ]; then
              npm run e2e.stage -- --suite merchant_provider_group
            fi
          no_output_timeout: 20m
  merge_development:
    <<: *job-defaults
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run: git submodule update --init --remote --merge
      - run:
          name: Promote changes
          command: node libs/deployment_scripts/src/merge-branches.js staging
  merge_staging_production:
    <<: *job-defaults
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run: git submodule update --init --remote --merge
      - run:
          name: Promote changes
          command: |
            if [ "${CIRCLE_BRANCH}" == "staging" ]; then
              node libs/deployment_scripts/src/merge-branches.js production
            elif [ "${CIRCLE_BRANCH}" == "production" ]; then
              node libs/deployment_scripts/src/merge-branches.js priority
            fi

workflows:
  version: 2
  build_deploy_test_and_merge:
    jobs:
      - install
      - build:
          requires:
            - install
      - aws_sts:
          requires:
            - install
          filters:
            branches:
              only:
                - development
                - staging
                - production
                - priority
      - deploy_s3:
          requires:
            - build
            - aws_sts
          filters:
            branches:
              only:
                - development
                - staging
                - production
                - priority
      - deploy_cloudfront:
          requires:
            - deploy_s3
      - e2e_local_smoke:
          requires:
            - install
          filters:
            branches:
              ignore:
                - development
                - staging
                - production
                - priority
      - e2e_register:
          requires:
            - deploy_cloudfront
          filters:
            branches:
              only:
                - development
                - staging
      - e2e_accept_invite:
          requires:
            - deploy_cloudfront
          filters:
            branches:
              only:
                - development
                - staging
      - e2e_login:
          requires:
            - deploy_cloudfront
          filters:
            branches:
              only:
                - development
                - staging
      - e2e_navigation:
          requires:
            - deploy_cloudfront
          filters:
            branches:
              only:
                - development
                - staging
      - e2e_campaign:
          requires:
            - deploy_cloudfront
          filters:
            branches:
              only:
                - development
                - staging
      - e2e_product:
          requires:
            - deploy_cloudfront
          filters:
            branches:
              only:
                - development
                - staging
      - e2e_product_schedule:
          requires:
            - deploy_cloudfront
          filters:
            branches:
              only:
                - development
                - staging
      - e2e_merchant_provider:
          requires:
            - deploy_cloudfront
          filters:
            branches:
              only:
                - development
                - staging
      - e2e_merchant_provider_group:
          requires:
            - deploy_cloudfront
          filters:
            branches:
              only:
                - development
                - staging
      - merge_development:
          requires:
            - deploy_cloudfront
            - e2e_register
            - e2e_accept_invite
            - e2e_login
            - e2e_navigation
            - e2e_campaign
            - e2e_product
            - e2e_product_schedule
            - e2e_merchant_provider
            - e2e_merchant_provider_group
          filters:
            branches:
              only:
                - development
      - hold:
          type: approval
          requires:
            - deploy_cloudfront
            - e2e_register
            - e2e_accept_invite
            - e2e_login
            - e2e_navigation
            - e2e_campaign
            - e2e_product
            - e2e_product_schedule
            - e2e_merchant_provider
            - e2e_merchant_provider_group
          filters:
            branches:
              only:
                - staging
                - production
      - merge_staging_production:
          requires:
            - hold
